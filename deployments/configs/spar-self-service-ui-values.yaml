global:
  sparHostname: spar.openg2p.sandbox.net

replicaCount: 1
image:
  repository: openg2p/openg2p-spar-self-service-ui
  pullPolicy: Always
  tag: "develop"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

envVars:
  NEXT_PUBLIC_BASE_PATH: /selfservice
  NEXT_PUBLIC_BASE_API_PATH: /api/selfservice

envVarsFrom: {}

containerPort: 3000

service:
  type: ClusterIP
  port: 80

resources: {}
  #  requests:
  #    cpu: 500m
  #    memory: 2G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

readinessProbe:
  httpGet:
    path: /selfservice
    port: 3000
  failureThreshold: 20
  periodSeconds: 30
  timeoutSeconds: 10
  initialDelaySeconds: 30

livenessProbe:
  httpGet:
    path: /selfservice
    port: 3000
  initialDelaySeconds: 15
  periodSeconds: 60
  failureThreshold: 5

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  helm.sh/revision: '{{ .Release.Revision }}'

podSecurityContext: {}
  # fsGroup: 2000

containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

updateStrategy:
  type: RollingUpdate

command: []
args: []

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /selfservice
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


istio:
  enabled: true
  virtualservice:
    enabled: true
    host: ""
    gateway: "internal"
    destination: '{{ include "selfserviceUi.fullname" . }}'
    destinationPort: '{{ .Values.service.port }}'
    prefix: /selfservice
    rewriteUri: ""
  gateway:
    enabled: false
    host: ""
    ingressController:
      istio: ingressgateway
    httpTlsRedirect: true
    httpEnabled: true
    httpsEnabled: false
    tls:
      mode: SIMPLE
      credentialName: ""