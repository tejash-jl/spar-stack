STEP 1: Login to the instance

gcloud.cmd compute ssh --zone "us-west2-a" "dev-instance" --tunnel-through-iap --project "in-gcp-apa-con-6002a-npd-1"

PROJECT_ID=in-gcp-apa-con-6002a-npd-1
OWNER=aparna
GSA=$PROJECT_ID-sa@$PROJECT_ID.iam.gserviceaccount.com
GSA_DISPLAY_NAME=$PROJECT_ID-sa
REGION=asia-south1
ZONE=asia-south1-a
CLUSTER=fr-cluster
DOMAIN_NAME=
EMAIL_ID=aparnr@deloitte.com
alias k=kubectl
Infrastructure Creation

STEP 2: One click of deployment of infrastructure

gcloud builds submit --config="./builds/infra/deploy-script.yaml" --project=in-gcp-apa-con-6002a-npd-1 --substitutions=_PROJECT_ID_=in-gcp-apa-con-6002a-npd-1,_SERVICE_ACCOUNT_=in-gcp-apa-con-6002a-npd-1-sa@in-gcp-apa-con-6002a-npd-1.iam.gserviceaccount.com,_LOG_BUCKET_=in-gcp-apa-con-6002a-npd-1-spar-state

STEP 3: One click deployment of services
        Modify the Domain name 

gcloud builds submit --config="./builds/apps/deploy-script.yaml" --region=asia-south1 --project=in-gcp-apa-con-6002a-npd-1 --substitutions=_PROJECT_ID_=in-gcp-apa-con-6002a-npd-1,_REGION_="asia-south1",_LOG_BUCKET_=in-gcp-apa-con-6002a-npd-1-spar-state,_EMAIL_ID_=aparnr@deloitte.com,_DOMAIN_=spardev.dpgongcp.com,_SERVICE_ACCOUNT_=in-gcp-apa-con-6002a-npd-1-sa@in-gcp-apa-con-6002a-npd-1.iam.gserviceaccount.com


STEP 4: Run the command

        Command 1: gcloud compute instances list

        Command 2: To use the existing LB 

            gcloud compute addresses list --regions=asia-south1
            gcloud compute addresses describe spar-dev-glb-lb-ip --region=asia-south1

            
        Command 3: gcloud compute ssh spar-dev-ops-vm --zone=asia-south1-a


STEP 4: INSTALL CRD

    # Download Istio
        curl -L https://istio.io/downloadIstio | sh -
    # Change to the Istio directory
        cd istio-*
    # Add the Istio binary to your PATH
        export PATH=$PWD/bin:$PATH
    # Install Istio with a demo profile, which includes CRDs
        istioctl install --set profile=demo -y
    # Prometheus Operator CRDs
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace

STEP 5: Try installing SPAR

    export NS=spar
    export SPAR_HOSTNAME= 

    helm repo add openg2p https://openg2p.github.io/openg2p-helm
    helm repo update

    helm install spar openg2p/spar -n spar --create-namespace --set global.sparHostname= -f values.yaml


STEP 6: To install Cert-Manager with Istio for managing your TLS certificates in a Kubernetes cluster, follow these steps
     
     helm repo add jetstack https://charts.jetstack.io
     helm repo update
     
     # install the latest version
     helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.11.0 --set installCRDs=true

     kubectl get pods --namespace cert-manager
     kubectl apply -f clusterissuer.yaml

     kubectl get clusterissuer letsencrypt-prod

STEP 7: Create a Certificate
     
     kubectl apply -f certificate.yaml

Verify Certificate Issuance

    Kubectl get certificate  -n istio-system



    


Command to get DB Credentials

sqlIP=$(gcloud sql instances describe spar-dev-pgsql --format=json | jq -r ".ipAddresses[0].ipAddress")
 echo "SQL Instance IP: $sqlIP" 

sqlPass=$(gcloud secrets versions access latest --secret spar-dev)
echo "SQL Password: $sqlPass"

connect to Psql
psql "sslmode=require hostaddr=PRIVATE_IP user=postgres dbname=postgres"

To get client secret

kubectl get secrets keycloak-client-secrets -n esignet -o jsonpath="{.data.mosip_pms_client_secret}" | base64 --decode


helm upgrade spar openg2p/spar -n spar -f values.yaml




